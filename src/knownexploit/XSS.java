package knownexploit;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import entrypoint.SQLIEntryPoint;
import entrypoint.XSSEntryPoint;
import sink.SQLISink;
import validation.SQLIValidation;
import xml.XMLParser;

public class XSS extends KnownExploit{

	public XSS(ArrayList<String> codeLines){
		super(codeLines, "Cross Site Scripting", new XMLParser("configs/XSS.xml"));
	}
	
	@Override
	public boolean isVunerable() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	protected void doLogic() {
		Pattern r = Pattern.compile("<?php (.*?)[?>]");//Pattern.compile("[php].*[?]");
		String withPhp = "";

		for(String line : getCodeLines()){
			Matcher m = r.matcher(line);
			if(m.find())
				withPhp = m.group(1);//echo $firstname; || echo $_SERVER["PHP_SELF"]
			
			if(withPhp.isEmpty())
				withPhp = line;
			
			if((withPhp.charAt(withPhp.length() - 1) == ";".charAt(0)) && (withPhp.contains("="))){//$firstname = $_POST['firstname'];
				fillVariableAndValue(withPhp);
			}else{ 
				if(withPhp.contains(" ")){//echo $_POST['username']; || //echo $firstname; || echo $_SERVER["PHP_SELF"]
					System.out.println(withPhp);
				}
				withPhp = "";
			}
		}
		
	}

}
